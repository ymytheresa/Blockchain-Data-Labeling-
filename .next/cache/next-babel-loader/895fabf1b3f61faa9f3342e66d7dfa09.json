{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/meow/Documents/Github/Blockchain-Data-Labeling-/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, Button } from \"semantic-ui-react\";\nimport Layout from '../components/Layout'; // import Link from '../routes'\n\nimport Link from \"next/link\";\n\nvar DataLabelingIndex = /*#__PURE__*/function (_Component) {\n  _inherits(DataLabelingIndex, _Component);\n\n  var _super = _createSuper(DataLabelingIndex);\n\n  function DataLabelingIndex() {\n    _classCallCheck(this, DataLabelingIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DataLabelingIndex, [{\n    key: \"renderDataLabelings\",\n    value: function renderDataLabelings() {\n      var _this = this;\n\n      var items = this.props.DataLabelings.map(function (DataLabeling) {\n        return {\n          header: DataLabeling,\n          description: __jsx(Link, {\n            href: {\n              pathname: \"/DataLabelings/[DataLabeling]\"\n            },\n            as: \"/DataLabelings/\".concat(DataLabeling),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 21\n            }\n          }, __jsx(\"a\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }\n          }, \"View DataLabeling\")),\n          fluid: true\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"Open DataLabelings\"), __jsx(Link, {\n        href: \"/DataLabelings/new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, __jsx(Button, {\n        content: \"Create DataLabeling\",\n        icon: \"add circle\",\n        primary: true,\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }))), this.renderDataLabelings()));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var DataLabelings;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return factory.methods.getDeployedDataLabelings().call();\n\n              case 2:\n                DataLabelings = _context.sent;\n                return _context.abrupt(\"return\", {\n                  DataLabelings: DataLabelings\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return DataLabelingIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Blockchain-Data-Labeling-/pages/index.js"],"names":["React","Component","factory","Card","Button","Layout","Link","DataLabelingIndex","items","props","DataLabelings","map","DataLabeling","header","description","pathname","fluid","renderDataLabelings","methods","getDeployedDataLabelings","call","CampaignIndex"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,iB;;;;;;;;;;;;;0CAOoB;AAAA;;AAClB,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA6B,UAAAC,YAAY,EAAI;AACvD,eAAO;AACHC,UAAAA,MAAM,EAAED,YADL;AAEHE,UAAAA,WAAW,EACP,MAAC,IAAD;AAAM,YAAA,IAAI,EAAE;AAACC,cAAAA,QAAQ,EAAC;AAAV,aAAZ;AAAwD,YAAA,EAAE,2BAAoBH,YAApB,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CAHD;AAOHI,UAAAA,KAAK,EAAE;AAPJ,SAAP;AASH,OAVa,CAAd;AAWA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAER,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;6BAEO;AACJ,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AACI,QAAA,OAAO,EAAC,qBADZ;AAEI,QAAA,IAAI,EAAC,YAFT;AAGI,QAAA,OAAO,MAHX;AAII,QAAA,OAAO,EAAC,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAFJ,EAYK,KAAKS,mBAAL,EAZL,CADJ,CADJ;AAkBH;;;;;;;;;;;uBAtC+Bf,OAAO,CAACgB,OAAR,CAAgBC,wBAAhB,GAA2CC,IAA3C,E;;;AAAtBV,gBAAAA,a;iDACC;AAAEA,kBAAAA,aAAa,EAAbA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAJiBT,S;;AA4ChC,eAAeoB,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, Button } from \"semantic-ui-react\";\nimport Layout from '../components/Layout';\n// import Link from '../routes'\nimport Link from \"next/link\";\n\nclass DataLabelingIndex extends Component {\n\n    static async getInitialProps() {\n        const DataLabelings = await factory.methods.getDeployedDataLabelings().call();\n        return { DataLabelings };\n    }\n\n    renderDataLabelings() {\n        const items = this.props.DataLabelings.map(DataLabeling => {\n            return {\n                header: DataLabeling,\n                description: (\n                    <Link href={{pathname:\"/DataLabelings/[DataLabeling]\"}} as={`/DataLabelings/${DataLabeling}` }>\n                        <a>View DataLabeling</a>\n                    </Link>\n                ),\n                fluid: true\n            }; \n        })\n        return <Card.Group items={items} />;\n    }\n\n    render(){\n        return(\n            <Layout>\n                <div>\n                    <h3>Open DataLabelings</h3>\n                    <Link href=\"/DataLabelings/new\">\n                        <a>\n                            <Button \n                                content=\"Create DataLabeling\" \n                                icon=\"add circle\" \n                                primary\n                                floated=\"right\"\n                            />\n                        </a>    \n                    </Link>\n                    {this.renderDataLabelings()}\n                </div>\n            </Layout>\n            );\n    }\n}\n\nexport default CampaignIndex;"]},"metadata":{},"sourceType":"module"}