{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/meow/Documents/Github/Blockchain-Data-Labeling-/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport factory from \"../ethereum/factory\";\nimport { Card, Button } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\"; // import Link from '../routes'\n\nimport Link from \"next/link\";\n\nvar DataLabelingIndex = /*#__PURE__*/function (_Component) {\n  _inherits(DataLabelingIndex, _Component);\n\n  var _super = _createSuper(DataLabelingIndex);\n\n  function DataLabelingIndex() {\n    _classCallCheck(this, DataLabelingIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DataLabelingIndex, [{\n    key: \"renderDataLabelings\",\n    value: function renderDataLabelings() {\n      var _this = this;\n\n      var items = this.props.DataLabelings.map(function (DataLabeling) {\n        return {\n          header: DataLabeling,\n          description: __jsx(Link, {\n            href: {\n              pathname: \"/DataLabelings/[DataLabeling]\"\n            },\n            as: \"/DataLabelings/\".concat(DataLabeling),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 11\n            }\n          }, __jsx(\"a\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }\n          }, \"View DataLabeling\")),\n          fluid: true\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Open DataLabelings\"), __jsx(Link, {\n        href: \"/DataLabelings/new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        content: \"Create DataLabeling\",\n        icon: \"add circle\",\n        primary: true,\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }))), this.renderDataLabelings()));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var DataLabelings;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return factory.methods.getDeployedDataLabelings().call();\n\n              case 2:\n                DataLabelings = _context.sent;\n                return _context.abrupt(\"return\", {\n                  DataLabelings: DataLabelings\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return DataLabelingIndex;\n}(Component);\n\nexport default DataLabelingIndex;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Blockchain-Data-Labeling-/pages/index.js"],"names":["React","Component","factory","Card","Button","Layout","Link","DataLabelingIndex","items","props","DataLabelings","map","DataLabeling","header","description","pathname","fluid","renderDataLabelings","methods","getDeployedDataLabelings","call"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,iB;;;;;;;;;;;;;0CAQkB;AAAA;;AACpB,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA6B,UAACC,YAAD,EAAkB;AAC3D,eAAO;AACLC,UAAAA,MAAM,EAAED,YADH;AAELE,UAAAA,WAAW,EACT,MAAC,IAAD;AACE,YAAA,IAAI,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aADR;AAEE,YAAA,EAAE,2BAAoBH,YAApB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJF,CAHG;AAULI,UAAAA,KAAK,EAAE;AAVF,SAAP;AAYD,OAba,CAAd;AAcA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAER,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;6BAEQ;AACP,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,OAAO,EAAC,qBADV;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,OAAO,MAHT;AAIE,QAAA,OAAO,EAAC,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,EAYG,KAAKS,mBAAL,EAZH,CADF,CADF;AAkBD;;;;;;;;;;;uBA3C6Bf,OAAO,CAACgB,OAAR,CACzBC,wBADyB,GAEzBC,IAFyB,E;;;AAAtBV,gBAAAA,a;iDAGC;AAAEA,kBAAAA,aAAa,EAAbA;AAAF,iB;;;;;;;;;;;;;;;;;;;EALqBT,S;;AAgDhC,eAAeM,iBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport factory from \"../ethereum/factory\";\nimport { Card, Button } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\n// import Link from '../routes'\nimport Link from \"next/link\";\n\nclass DataLabelingIndex extends Component {\n  static async getInitialProps() {\n    const DataLabelings = await factory.methods\n      .getDeployedDataLabelings()\n      .call();\n    return { DataLabelings };\n  }\n\n  renderDataLabelings() {\n    const items = this.props.DataLabelings.map((DataLabeling) => {\n      return {\n        header: DataLabeling,\n        description: (\n          <Link\n            href={{ pathname: \"/DataLabelings/[DataLabeling]\" }}\n            as={`/DataLabelings/${DataLabeling}`}\n          >\n            <a>View DataLabeling</a>\n          </Link>\n        ),\n        fluid: true,\n      };\n    });\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h3>Open DataLabelings</h3>\n          <Link href=\"/DataLabelings/new\">\n            <a>\n              <Button\n                content=\"Create DataLabeling\"\n                icon=\"add circle\"\n                primary\n                floated=\"right\"\n              />\n            </a>\n          </Link>\n          {this.renderDataLabelings()}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default DataLabelingIndex;\n"]},"metadata":{},"sourceType":"module"}