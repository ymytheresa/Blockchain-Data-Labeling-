{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/meow/Documents/Github/Blockchain-Data-Labeling-/pages/campaigns/new.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport Router from \"next/router\";\n\nvar CampaignNew = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignNew, _Component);\n\n  var _super = _createSuper(CampaignNew);\n\n  function CampaignNew() {\n    var _this;\n\n    _classCallCheck(this, CampaignNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      minimumContribution: \"\",\n      //input is string\n      errorMessage: \"\",\n      loading: false //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); //prevent default behavior <-- submit the data to backend\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: \"\"\n                });\n\n                _context.prev = 2;\n                _context.next = 5;\n                return web3.eth.getAccounts();\n\n              case 5:\n                accounts = _context.sent;\n                _context.next = 8;\n                return factory.methods.createCampaign(_this.state.minimumContribution).send({\n                  from: accounts[0]\n                });\n\n              case 8:\n                _this.setState({\n                  loading: false\n                }); //after successful created campaign, redirect to another link, home page\n\n\n                Router.push(\"/\");\n                _context.next = 16;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(CampaignNew, [{\n    key: \"render\",\n    //error={} <-- expected receiving bool, so we give (false(false(1))) -> will give 1\n    //need <Message> tag here to print the error message\n    //button loading property\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, \"Create new campaign\"), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, \"Minimum Contribution\"), __jsx(Input, {\n        label: \"wei\",\n        labelPosition: \"right\",\n        value: this.state.minimumContribution,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            minimumContribution: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Error!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, \"Create!\")));\n    }\n  }]);\n\n  return CampaignNew;\n}(Component);\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/meow/Documents/Github/Blockchain-Data-Labeling-/pages/campaigns/new.js"],"names":["React","Component","Layout","Form","Button","Input","Message","factory","web3","Router","CampaignNew","minimumContribution","errorMessage","loading","event","preventDefault","setState","eth","getAccounts","accounts","methods","createCampaign","state","send","from","push","message","onSubmit","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport Router from \"next/router\";\n\nclass CampaignNew extends Component {\n  //images, class value for class1, class2\n  //contribution for each data providers if complete all data labelling\n\n  //need to update state, why? only updating the state will rerender the components\n  state = {\n    minimumContribution: \"\", //input is string\n    errorMessage: \"\",\n    loading: false, //when onSubmit and before created campaign, loading=true , change button. when error/done, loading=false, chanch back button\n  };\n\n  //parathesis is not passed since if passed the function will be triggered once load. reference is passed instead\n  onSubmit = async (event) => {\n    event.preventDefault(); //prevent default behavior <-- submit the data to backend\n    this.setState({ loading: true, errorMessage: \"\" });\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods\n        .createCampaign(this.state.minimumContribution)\n        .send({\n          from: accounts[0],\n        });\n      this.setState({ loading: false });\n\n      //after successful created campaign, redirect to another link, home page\n      Router.push(\"/\");\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n      this.setState({ loading: false });\n    }\n  };\n\n  //error={} <-- expected receiving bool, so we give (false(false(1))) -> will give 1\n  //need <Message> tag here to print the error message\n  //button loading property\n  render() {\n    return (\n      <Layout>\n        <h3>Create new campaign</h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Minimum Contribution</label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.minimumContribution}\n              onChange={(event) =>\n                this.setState({ minimumContribution: event.target.value })\n              }\n            />\n          </Form.Field>\n\n          <Message error header=\"Error!\" content={this.state.errorMessage} />\n          <Button loading={this.state.loading} primary>\n            Create!\n          </Button>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}